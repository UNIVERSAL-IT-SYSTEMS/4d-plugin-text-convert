/* --------------------------------------------------------------------------------
 #
 #	4DPlugin.h
 #	source generated by 4D Plugin Wizard
 #	Project : Text Convert
 #	author : miyako
 #	2015/02/13
 #
 # --------------------------------------------------------------------------------*/

#if VERSIONMAC
#include "cpmap.h"
#endif

#if VERSIONWIN
#include <mlang.h>
#endif

#define ERR_INVALID_ENCODING (-1)
#define ERR_CONVERSION_FAILED (-2)
#define ERR_DETECTION_FAILED (-3)

#define JIS7_SO_SI 0
#define JIS7_ESC 1
#define JIS8 2

typedef enum
{
    kG0Undefined	= 0,
    kG0ASCII		= 1,
    kG0JIS			= 2
}eG0Mode;

#define MAX_LENGTH_FOR_ENCODING_NAME (255)

#include "unicode/ucnv.h"
#include "unicode/utrans.h"
#include "unicode/ucsdet.h"
#include "unicode/unorm2.h"

typedef enum
{
    _NFC = 0,
    _NFD = 1,
    _NFKC = 2,
    _NFKD = 3,
    _NFKC_CF = 4
} NormalizationForm;

#include "iconv.h"

// --- ICU
void ICU_GET_ENCODING_LIST(sLONG_PTR *pResult, PackagePtr pParams);
void ICU_Get_good_encodings(sLONG_PTR *pResult, PackagePtr pParams);
void ICU_Get_best_encoding(sLONG_PTR *pResult, PackagePtr pParams);
void ICU_Normalize_text(sLONG_PTR *pResult, PackagePtr pParams);
void ICU_Transform_text(sLONG_PTR *pResult, PackagePtr pParams);
void ICU_Get_error_text(sLONG_PTR *pResult, PackagePtr pParams);
void ICU_Convert_to_text(sLONG_PTR *pResult, PackagePtr pParams);
void ICU_Convert_from_text(sLONG_PTR *pResult, PackagePtr pParams);

// --- ICONV
void ICONV_Convert(sLONG_PTR *pResult, PackagePtr pParams);

// --- JIS
void JIS_Convert_to_text(sLONG_PTR *pResult, PackagePtr pParams);
void JIS_Convert_from_text(sLONG_PTR *pResult, PackagePtr pParams);

// --- ICONV
void ICONV_GET_ENCODING_LIST(sLONG_PTR *pResult, PackagePtr pParams);

// --- CP
void CP_GET_ENCODING_LIST(sLONG_PTR *pResult, PackagePtr pParams);
void CP_Get_best_encoding(sLONG_PTR *pResult, PackagePtr pParams);
void CP_Convert_from_text(sLONG_PTR *pResult, PackagePtr pParams);
void CP_Convert_to_text(sLONG_PTR *pResult, PackagePtr pParams);
void CP_Get_good_encodings(sLONG_PTR *pResult, PackagePtr pParams);
